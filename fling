local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Targets = _G.var_target or {}

local AllBool = false
local FinalTargets = {}

local Message = function(_Title, _Text, Time)
	game:GetService("StarterGui"):SetCore("SendNotification", {
		Title = _Title,
		Text = _Text,
		Duration = Time or 3
	})
end

-- GetPlayer function
local function GetPlayer(Name)
	Name = Name:lower()

	if Name == "all" or Name == "others" then
		AllBool = true
		return nil
	elseif Name == "random" then
		local others = {}
		for _, p in pairs(Players:GetPlayers()) do
			if p ~= Player then table.insert(others, p) end
		end
		return #others > 0 and others[math.random(1, #others)] or nil
	else
		for _, p in pairs(Players:GetPlayers()) do
			if p ~= Player then
				if p.Name:lower():match("^" .. Name) or p.DisplayName:lower():match("^" .. Name) then
					return p
				end
			end
		end
	end

	return nil
end

-- Parse target list
for _, name in pairs(Targets) do
	local plr = GetPlayer(name)
	if plr then
		table.insert(FinalTargets, plr)
	elseif not AllBool then
		Message("Error Occurred", `Username "{name}" Invalid`, 5)
	end
end

-- Fling logic
local function SkidFling(TargetPlayer)
	-- Your original fling logic (unchanged) goes here.
	-- Keep it the same as in your post, it will still work.
end

-- Fling everyone
if AllBool then
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= Player then
			SkidFling(p)
		end
	end
end

-- Fling selected
for _, plr in pairs(FinalTargets) do
	if plr and plr.UserId ~= 1414978355 then
		SkidFling(plr)
	elseif plr and plr.UserId == 1414978355 then
		Message("Error Occurred", "This user is whitelisted! (Owner)", 5)
	end
end
